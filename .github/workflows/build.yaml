name: Reusable stacker build
on:
  workflow_call:
    inputs:
      go-version:
        required: true
        type: string
        description: 'Stringified JSON object listing go versions'
      privilege-level:
        required: true
        type: string
        description: 'Stringified JSON object listing stacker privilege-level'
jobs:
  build:
    runs-on: ubuntu-22.04
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      matrix:
        go-version: ${{fromJson(inputs.go-version)}}
        privilege-level: ${{fromJson(inputs.privilege-level)}}
    name: "golang ${{ matrix.go-version }} privilege ${{ matrix.privilege-level }}"
    steps:
      - uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
      - name: Set up golang ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yy lxc-utils lxc-dev libacl1-dev jq libcap-dev libseccomp-dev libpam-dev bats parallel libzstd-dev
          GO111MODULE=off go get github.com/opencontainers/umoci/cmd/umoci
          sudo cp ~/go/bin/umoci /usr/bin
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
          sudo apt-get install -yy autoconf automake make autogen autoconf libtool binutils git squashfs-tools libcryptsetup-dev libdevmapper-dev cryptsetup-bin squashfuse
          (cd /tmp && git clone https://github.com/AgentD/squashfs-tools-ng && cd squashfs-tools-ng && ./autogen.sh && ./configure --prefix=/usr && make -j2 && sudo make -j2 install && sudo ldconfig -v)
          (cd /tmp && git clone https://github.com/anuvu/squashfs && cd squashfs && make && sudo cp squashtool/squashtool /usr/bin)
      - if: github.event_name != 'release' || github.event.action != 'published'
        name: Build
        run: |
          make stacker
        env:
          REGISTRY_URL: localhost:5000
      - if: github.event_name != 'release' || github.event.action != 'published'
        name: Test
        run: |
          make check PRIVILEGE_LEVEL=${{ matrix.privilege-level }}
        env:
          REGISTRY_URL: localhost:5000
      - if: github.event_name == 'release' && github.event.action == 'published'
        name: Build and test released version
        run: |
          make check VERSION_FULL=${{ github.event.release.tag_name }}-${{ steps.short-sha.outputs.sha }} PRIVILEGE_LEVEL=${{ matrix.privilege-level }}
        env:
          REGISTRY_URL: localhost:5000
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: stacker
          key: ${{ steps.short-sha.outputs.sha }}
